{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Graql",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#string-double-quoted"
		},	
		{
			"include": "#string-single-quoted"
		},	
		{
			"include": "#escaped-char"
		},	
		{
			"include": "#comments"
		},	
		{
			"include": "#variables"
		},			
		{
			"name": "meta.interface.gql",
			"match": "\\b(entity|role|relation|attribute|rule|inference-rule)\\b",
			"comment": "Considereing that those keyword need/can be implemented... thus interface?"
		},
		{
			"name": "storage.type.gql",
			"match": "\\b(datatype|string|long|double|boolean|date|true|false)\\b"
		},
		{
			"name": "entity.name.class.gql",
			"match": "[a-zA-Z_][-\\w]*"
		},
		{
			"name": "constant.numeric.gql",
			"match": "[-+]?\\d+(\\.\\d+)?"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.gql",
					"match": "\\b(if|then|for|else|elseif|do|for|then|when)\\b"
				},
				{
					"name": "keyword.other.gql",
					"match": "\\b(?!.*-.\\s)(ask|define|key|from|undefine|match|get|aggregate|insert|label|isa|sub|plays|involves|relates|has|has-scope|datatype|is-abstract|group|val|id|of|order|by|to|compute|in|id|std|median|mean|max|min|sum|count|degree|path|cluster)\\b"
				},
				{
					"name": "keyword.operator.gql",
					"match": ">=|<=|>|<|>>|<<|\\b(contains|regex|asc|desc|and|delete|distinct|limit|offset|select|noescp|not|null)\\b"
				},
				{
					"match": "(-[a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}])+",
					"name": "invalid.illegal.gql"
				}
			]	
		},
		"variables": {			
			"patterns": [
				{
					"match": "(?i)(\\$+)[a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}]*\\b",
					"name": "variable.other.gql",
					"captures": {
						"2":{"name": "punctuation.definition.variable.gql"}
					}
				},
				{
					"match": "(-[a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}])+",
					"name": "invalid.illegal.gql"
				}
			]
		},
		"string-double-quoted": {
			"begin": "\"",
			"beginCaptures": [
				{
					"name": "punctuation.definition.string.begin.gql"
				}
			],
			"end": "\"",
			"endCaptures": [
				{
					"name": "punctuation.definition.string.end.gql"
				}
			],
			"name": "string.quoted.double.gql",
			"patterns": [
				{
					"include": "#escaped-char"
				}
			]
		},
		"string-single-quoted": {
			"begin": "'",
			"beginCaptures": [
				{
					"name": "punctuation.definition.string.begin.gql"
				}
			],
			"end": "'",
			"endCaptures": [
				{
					"name": "punctuation.definition.string.end.gql"
				}
			],
			"name": "string.quoted.single.gql",
			"patterns": [
				{
					"include": "#escaped-char"
				}
			]
		},
		"escaped-char" : {
			"name": "constant.character.escape.gql",
			"patterns": [
				{
					"match": "\\\\(x\\h{2}|n|r|t|0|\"|''|\\\\|u\\{\\h{1,6}\\})"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"match": "(#).+",
					"captures": {
						"0": {
							"name": "punctuation.definition.variable.gql"
						}
					},
					"name":"comment.line.gql"
				}
			]
		}
	},
	"scopeName": "source.gql"
}